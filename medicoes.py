import streamlit as st
import streamlit as st
import fitz  # PyMuPDF
from PIL import Image
import io

st.set_page_config(page_title="ConciliaÃ§Ã£o OCR", layout="wide")

# Menu lateral
menu = st.sidebar.radio("Navegar para:", [
    "ğŸ“¥ Upload de Arquivos",
    "ğŸ§¾ OCR e ExtraÃ§Ã£o de Dados",
    "ğŸ¤– Fallback com GPT-4o",
    "ğŸ“Š VisualizaÃ§Ã£o e ExportaÃ§Ã£o"
])

# ExecuÃ§Ã£o de cada pÃ¡gina
if menu == "ğŸ“¥ Upload de Arquivos":
    st.title("ğŸ“¥ Upload de Arquivos")

    uploaded_file = st.file_uploader("Selecione um PDF ou imagem (JPG, PNG)", type=["pdf", "png", "jpg", "jpeg"])

    if uploaded_file:
        file_name = uploaded_file.name
        file_bytes = uploaded_file.read()

        st.session_state['file_name'] = file_name
        st.session_state['file_ext'] = file_name.split(".")[-1].lower()

        imagens = []

        # Processamento de PDF em imagens
        if st.session_state['file_ext'] == "pdf":
            doc = fitz.open(stream=file_bytes, filetype="pdf")
            for i, page in enumerate(doc):
                pix = page.get_pixmap(dpi=300)
                img_bytes = pix.tobytes("png")
                img = Image.open(io.BytesIO(img_bytes))
                imagens.append(img)

        # Upload direto de imagem
        else:
            img = Image.open(io.BytesIO(file_bytes)).convert("RGB")
            imagens.append(img)

        # Armazena imagens renderizadas na sessÃ£o
        st.session_state['imagens'] = imagens

        st.success(f"âœ… {len(imagens)} pÃ¡gina(s) processada(s) com sucesso!")

        # Exibe as imagens renderizadas
        for i, img in enumerate(imagens):
            st.markdown(f"**PÃ¡gina {i+1}**")
            st.image(img, use_column_width=True)
    else:
        st.info("ğŸ“‚ FaÃ§a upload de um arquivo para visualizar.")

elif menu == "ğŸ§¾ OCR e ExtraÃ§Ã£o de Dados":
    st.title("ğŸ§¾ OCR e ExtraÃ§Ã£o de Dados")
    # A lÃ³gica de OCR serÃ¡ implementada aqui

elif menu == "ğŸ¤– Fallback com GPT-4o":
    st.title("ğŸ¤– Fallback com GPT-4o")
    # GPT irÃ¡ auxiliar no parsing quando o OCR for insuficiente

elif menu == "ğŸ“Š VisualizaÃ§Ã£o e ExportaÃ§Ã£o":
    st.title("ğŸ“Š VisualizaÃ§Ã£o e ExportaÃ§Ã£o")
    # ExibiÃ§Ã£o final com filtros + botÃ£o para CSV
